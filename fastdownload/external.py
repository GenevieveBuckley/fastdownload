# AUTOGENERATED! DO NOT EDIT! File to edit: 01_external.ipynb (unless otherwise specified).

__all__ = ['URLs', 'FastDownload']

# Cell
import json
import warnings
from nbdev.showdoc import *
from fastprogress.fastprogress import progress_bar
from fastcore.all import *
from .helper import *
from .helper import _get_URLs, _check_present, _add_check, _get_check, _check_file

# Cell
URLs = _get_URLs()

# Cell
class FastDownload:
    def __init__(self, cfg=None, dir='~/.fastai', archive_path=None, data_path=None, overwrite=False):
        config = Config() if cfg is None else cfg
        data_path = data_path or config['data']
        archive_path = archive_path or config['archive']
        store_attr('data_path, archive_path')

    def download(self, url_, dest=None):
        if isinstance(url_, str): url=url_; run_checks=False
        else: url = url_[0]; run_checks=True
        fname = Path(url.split('/')[-1])
        fpath = self.archive_path/fname
        dest  = self.data_path/fname.with_suffix('')
        if not dest.exists():
            fpath = download_data(src=url, dest=fpath)
            if run_checks:
                if not _check_present(url_, fpath): _add_check(fpath, url)
                if _get_check(url) and _check_file(fpath) != _get_check(url):
                    warnings.warn(f"File downloaded seems broken. Remove {fname} and try again.")
            file_extract(fpath, dest.parent)
        return dest